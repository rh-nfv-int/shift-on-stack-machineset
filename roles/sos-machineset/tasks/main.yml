---
- name: parse metadata.json from the cluster deployment
  set_fact:
    metadata: "{{ lookup('file', cluster_metadata_path) |from_json }}"

- name: extract variables
  set_fact:
    number_of_replicas: 2
    infrastructure_id: "{{ metadata.infraID }}"
    node_role: "worker"
    nova_flavor: "ocp-worker"
    glance_image_name_or_location: "{{ metadata.infraID }}-rhcos"
    machines_subnet_UUID: "6a295ed7-9464-43d1-8523-bcd6f7711370"
    additional_networks:
      - network_UUID: "05015607-2a94-4399-a25e-27318597bdca"
        name_suffix: "uplink1"
        subnet_UUID: "dd3303e4-3ad1-4a14-9b94-cb80c3db3f1f"
        tags:
          - tag1
        vnic_type: "normal"
      - network_UUID: "210a9de6-9330-4e12-8edd-f77da9bb30c6"
        name_suffix: "uplink2"
        subnet_UUID: "3f044c45-d192-4fb5-9523-d2933ce93078"
        tags:
          - tag1
        vnic_type: "normal"
  
- name: render template
  set_fact:
    machineset: "{{ lookup('template', machineset_template_path) }}"

- name: Print out interfaces
  debug:
    var: machineset

- name: write machineset file
  copy: 
    content: "{{ machineset }}" 
    dest: "ms.yaml"

# - name: Get a list of all pods from any namespace
#   kubernetes.core.k8s_info:
#     kind: Pod
#   register: pod_list

# - name: add service file to list
#   set_fact:
#     systemd:
#       - name: "{{ bind_service_name }}"
#         source: "{{ lookup('file', bind_service_file_path) }}"

# - name: convert comman separated to space separated networks
#   set_fact:
#     network_ids_parsed: "{{ network_ids.split(',') | join(' ') }}"

# - set_fact:
#     network_resource_map: "{{ network_resource_map|combine({ item.0 : item.1 }) }}"
#   with_together:
#     - "{{ network_ids.split(',') }}"
#     - "{{ resource_names.split(',') }}"

# - name: create contents list
#   set_fact:
#     contents:
#       - name: "{{ vfio_module_filename }}"
#         source: "{{ lookup('file', vfio_module_file_path) }}"
#       - name: "{{ exec_script_filename }}"
#         source: "{{ lookup('file', exec_script_file_path) }}"
#         mode: "0744"
#       - name: "{{ nwid_conf_filename }}"
#         source: "{{ lookup('template', nwid_conf_file_path) }}"

# - name: create mc config
#   k8s:
#     definition: "{{ lookup('template', mc_file_path) }}"

# # Change it to host-device plugin later
# - name: create device plugin for vhostuser
#   k8s:
#     definition: "{{ lookup('template', 'sriov-device-plugin-ds.yaml') }}"
