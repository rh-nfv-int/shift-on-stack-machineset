---
- name: parse metadata.json from the cluster deployment
  set_fact:
    metadata: "{{ lookup('file', cluster_metadata_path) |from_json }}"

- name: extract cluster variables
  set_fact:
    cluster_name: "{{ metadata.clusterName }}"
    infrastructure_id: "{{ metadata.infraID }}"
    # The openshift-install default name for the glance image
    # Can be overriden if needed
    glance_image_name_or_location: "{{ metadata.infraID }}-rhcos"

- name: fetch default network info
  os_networks_info:
    cloud: overcloud
    name: "{{ infrastructure_id }}-*"
  register: default_network_info

- name: fail if default network is not valid
  fail:
    msg: "Default overcloud network is not found"
  when: default_network_info.openstack_networks|length != 1

- name: get default network id
  set_fact:
    default_network_id: "{{ default_network_info.openstack_networks[0].id }}"
    machines_subnet_UUID: "{{ default_network_info.openstack_networks[0].subnets[0] }}"

- name: fail if additional_network_names is not valid
  fail:
    msg: "additional_network_names is not valid"
  when: additional_network_names|default([])|length == 0

- name: set fact for additional networks
  set_fact:
    additional_networks: []
    names: "{{ additional_network_names }}"

- name: split if input is tring
  set_fact:
    names: "{{ additional_network_names.split(',') }}"
  when: additional_network_names is string

- name: fetch addon network info
  include_tasks: addon.yaml
  loop: "{{ names }}"

- name: extract variables
  set_fact:
    infrastructure_id: "{{ metadata.infraID }}"
    # The openshift-install default name for the glance image
    # Can be overriden if needed

- name: render template
  set_fact:
    machineset: "{{ lookup('template', machineset_template_path) }}"

- name: Print out interfaces
  debug:
    var: machineset

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ build_output_dir }}"
    state: directory
    mode: "0755"

- name: write machineset file
  copy:
    content: "{{ machineset }}"
    dest: "{{build_output_dir}}/{{ metadata.infraID }}-{{ node_role }}-machineset.yaml"

#- name: create machineset block
#  when: kubeconfig_path|length > 0
#  block:
#  - name: create machineset
#    k8s:
#      definition: "{{ machineset }}"
#
#  - name: wait for openstack server creation
#    os_server_info:
#      name: "{{ infrastructre_id }}-{{ node_role }}-*"
#    register: server_list
#    retries: 10
#    delay: 5
#    until: server_list.openstack_servers|length == number_of_replicas 
