---
- name: parse metadata.json from the cluster deployment
  set_fact:
    metadata: "{{ lookup('file', cluster_metadata_path) |from_json }}"

- name: extract variables
  set_fact:
    infrastructure_id: "{{ metadata.infraID }}"
    # The openshift-install default name for the glance image
    # Can be overriden if needed
    glance_image_name_or_location: "{{ metadata.infraID }}-rhcos"

- name: render template
  set_fact:
    machineset: "{{ lookup('template', machineset_template_path) }}"

- name: Print out interfaces
  debug:
    var: machineset

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ build_output_dir }}"
    state: directory
    mode: "0755"

- name: write machineset file
  copy:
    content: "{{ machineset }}"
    dest: "{{build_output_dir}}/{{ metadata.infraID }}-{{ node_role }}-machineset.yaml"
# - name: Get a list of all pods from any namespace
#   kubernetes.core.k8s_info:
#     kind: Pod
#   register: pod_list

# - name: add service file to list
#   set_fact:
#     systemd:
#       - name: "{{ bind_service_name }}"
#         source: "{{ lookup('file', bind_service_file_path) }}"

# - name: convert comman separated to space separated networks
#   set_fact:
#     network_ids_parsed: "{{ network_ids.split(',') | join(' ') }}"

# - set_fact:
#     network_resource_map: "{{ network_resource_map|combine({ item.0 : item.1 }) }}"
#   with_together:
#     - "{{ network_ids.split(',') }}"
#     - "{{ resource_names.split(',') }}"

# - name: create contents list
#   set_fact:
#     contents:
#       - name: "{{ vfio_module_filename }}"
#         source: "{{ lookup('file', vfio_module_file_path) }}"
#       - name: "{{ exec_script_filename }}"
#         source: "{{ lookup('file', exec_script_file_path) }}"
#         mode: "0744"
#       - name: "{{ nwid_conf_filename }}"
#         source: "{{ lookup('template', nwid_conf_file_path) }}"

# - name: create mc config
#   k8s:
#     definition: "{{ lookup('template', mc_file_path) }}"

# # Change it to host-device plugin later
# - name: create device plugin for vhostuser
#   k8s:
#     definition: "{{ lookup('template', 'sriov-device-plugin-ds.yaml') }}"
