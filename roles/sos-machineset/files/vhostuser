#!/bin/bash

# NOTE: jq is present in the coreos worker created, find if available in all versions

set -e
if [[ "$#" -lt 1 ]]; then
    echo "Nework ID not provided, nothing to do"
    exit
fi

list='{"resourceList":[]}'
source /etc/vhostuser-bind.conf

NW_DATA="/var/config/openstack/latest/network_data.json"
function parseNetwork() {
    local nwid=$1
    local pcis=()
    local entry='{"resourceName":"","selectors":{"drivers":["vfio-pci"],"pciAddresses":[]}}'
    res=$(jq 'to_entries[]|select(.key == "'"$nwid"'")|.value' <<< $MAP)
    echo "Network ID is $nwid and resource name is $res"
    links=$(jq '.networks[] | select(.network_id == "'$nwid'") | .link' $NW_DATA)
    entry=$(jq -r '.resourceName = '"$res" <<< $entry)
    if [ ${#links} -gt 0 ]; then
        for link in $links; do
            echo "Link Name: $link"
            mac=$(jq -r '.links[] | select(.id == '$link') | .ethernet_mac_address'  $NW_DATA)
            if [ -n $mac ]; then
                pci=$(bindDriver $mac)
                pci_ret=$?
                if [[ "$pci_ret" -eq 0 ]]; then
                    entry=$(jq -c -r '.selectors.pciAddresses += ["'$pci'"]' <<< $entry)
                fi
            fi
        done
    fi
    list=$(jq -c -r '.resourceList += ['$entry']' <<< $list)
}

function bindDriver() {
    local mac=$1
    local res=$2
    for file in /sys/class/net/*; do
        dev_mac=$(cat $file/address)
        if [[ "$mac" == "$dev_mac" ]]; then
            name=${file##*\/}
            bus_str=$(ethtool -i $name | grep bus)
            dev_t=${bus_str#*:}
            dev=${dev_t#[[:space:]]}

            echo $dev

            devlink="/sys/bus/pci/devices/$dev"
            syspath=$(realpath "$devlink")
            if [ ! -f "$syspath/driver/unbind" ]; then
                echo "File $syspath/driver/unbind not found"
                return 1
            fi
            echo "$dev">"$syspath/driver/unbind"

            if [ ! -f "$syspath/driver_override" ]; then
                echo "File $syspath/driver_override not found"
                return 1
            fi
            echo "vfio-pci">"$syspath/driver_override"

            if [ ! -f "/sys/bus/pci/drivers/vfio-pci/bind" ]; then
                echo "File /sys/bus/pci/drivers/vfio-pci/bind not found"
                return 1
            fi
            echo "$dev">"/sys/bus/pci/drivers/vfio-pci/bind"
	    return 0
        fi
    done
}

for nwid in "$@"; do
    parseNetwork $nwid
done
mkdir -p /var/lib/vhostuser/
echo $list>/var/lib/vhostuser/vhost.json
